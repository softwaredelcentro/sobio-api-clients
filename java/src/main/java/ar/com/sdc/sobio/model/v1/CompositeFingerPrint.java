/*
 * SOBIO
 * SOBIO Biometric Services
 *
 * OpenAPI spec version: 1
 * Contact: info@softwaredelcentro.com.ar
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ar.com.sdc.sobio.model.v1;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * CompositeFingerPrint
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-11T17:07:14.771-03:00")
public class CompositeFingerPrint {
  /**
   * Gets or Sets dedo
   */
  public enum DedoEnum {
    RIGHT_THUMB("RIGHT_THUMB"),
    
    LEFT_THUMB("LEFT_THUMB"),
    
    RIGHT_INDEX_FINGER("RIGHT_INDEX_FINGER"),
    
    LEFT_INDEX_FINGER("LEFT_INDEX_FINGER"),
    
    RIGHT_MIDDLE_FINGER("RIGHT_MIDDLE_FINGER"),
    
    LEFT_MIDDLE_FINGER("LEFT_MIDDLE_FINGER"),
    
    LEFT_RING_FINGER("LEFT_RING_FINGER"),
    
    RIGHT_RING_FINGER("RIGHT_RING_FINGER"),
    
    LEFT_LITTLE_FINGER("LEFT_LITTLE_FINGER"),
    
    RIGHT_LITTLE_FINGER("RIGHT_LITTLE_FINGER"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    DedoEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DedoEnum fromValue(String text) {
      for (DedoEnum b : DedoEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("dedo")
  private DedoEnum dedo = null;

  @JsonProperty("images")
  private List<List<Integer>> images = null;

  /**
   * Gets or Sets source
   */
  public enum SourceEnum {
    LIVE_FINGERPRINT("LIVE_FINGERPRINT"),
    
    SCANNED_FINGERPRINT_IMAGE("SCANNED_FINGERPRINT_IMAGE"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SourceEnum fromValue(String text) {
      for (SourceEnum b : SourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("source")
  private SourceEnum source = null;

  @JsonProperty("template")
  private byte[] template = null;

  public CompositeFingerPrint dedo(DedoEnum dedo) {
    this.dedo = dedo;
    return this;
  }

   /**
   * Get dedo
   * @return dedo
  **/
  @ApiModelProperty(value = "")
  public DedoEnum getDedo() {
    return dedo;
  }

  public void setDedo(DedoEnum dedo) {
    this.dedo = dedo;
  }

  public CompositeFingerPrint images(List<List<Integer>> images) {
    this.images = images;
    return this;
  }

  public CompositeFingerPrint addImagesItem(List<Integer> imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<List<Integer>>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @ApiModelProperty(value = "")
  public List<List<Integer>> getImages() {
    return images;
  }

  public void setImages(List<List<Integer>> images) {
    this.images = images;
  }

  public CompositeFingerPrint source(SourceEnum source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(value = "")
  public SourceEnum getSource() {
    return source;
  }

  public void setSource(SourceEnum source) {
    this.source = source;
  }

  public CompositeFingerPrint template(byte[] template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @ApiModelProperty(value = "")
  public byte[] getTemplate() {
    return template;
  }

  public void setTemplate(byte[] template) {
    this.template = template;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompositeFingerPrint compositeFingerPrint = (CompositeFingerPrint) o;
    return Objects.equals(this.dedo, compositeFingerPrint.dedo) &&
        Objects.equals(this.images, compositeFingerPrint.images) &&
        Objects.equals(this.source, compositeFingerPrint.source) &&
        Objects.equals(this.template, compositeFingerPrint.template);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dedo, images, source, template);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompositeFingerPrint {\n");
    
    sb.append("    dedo: ").append(toIndentedString(dedo)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

