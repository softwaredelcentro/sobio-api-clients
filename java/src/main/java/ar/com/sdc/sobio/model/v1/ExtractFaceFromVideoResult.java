/*
 * BIOMIX
 * BIOMIX Biometric Services
 *
 * OpenAPI spec version: 1
 * Contact: soporte@securbase.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ar.com.sdc.sobio.model.v1;

import java.util.Objects;
import ar.com.sdc.sobio.model.v1.DetectedAction;
import ar.com.sdc.sobio.model.v1.Face;
import ar.com.sdc.sobio.model.v1.FaceProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * ExtractFaceFromVideoResult
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-22T14:48:09.641-03:00")
public class ExtractFaceFromVideoResult {
  @JsonProperty("detectedActions")
  private List<DetectedAction> detectedActions = null;

  @JsonProperty("durationTime")
  private Long durationTime = null;

  @JsonProperty("exception")
  private Boolean exception = null;

  @JsonProperty("face")
  private Face face = null;

  @JsonProperty("livenessLevel")
  private Integer livenessLevel = null;

  @JsonProperty("properties")
  private FaceProperties properties = null;

  @JsonProperty("startTime")
  private Long startTime = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    OK("OK"),
    
    UNKNOWN_VIDEO_FORMAT("UNKNOWN_VIDEO_FORMAT"),
    
    MORE_THAN_ONE_FACE("MORE_THAN_ONE_FACE"),
    
    BAD_ILLUMINATION("BAD_ILLUMINATION"),
    
    FACE_NOT_DETECTED("FACE_NOT_DETECTED"),
    
    LIVENESS_CHECK_FAILED("LIVENESS_CHECK_FAILED"),
    
    LIVENESS_CHECK_LEVEL("LIVENESS_CHECK_LEVEL");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("txId")
  private String txId = null;

  public ExtractFaceFromVideoResult detectedActions(List<DetectedAction> detectedActions) {
    this.detectedActions = detectedActions;
    return this;
  }

  public ExtractFaceFromVideoResult addDetectedActionsItem(DetectedAction detectedActionsItem) {
    if (this.detectedActions == null) {
      this.detectedActions = new ArrayList<DetectedAction>();
    }
    this.detectedActions.add(detectedActionsItem);
    return this;
  }

   /**
   * Get detectedActions
   * @return detectedActions
  **/
  @ApiModelProperty(value = "")
  public List<DetectedAction> getDetectedActions() {
    return detectedActions;
  }

  public void setDetectedActions(List<DetectedAction> detectedActions) {
    this.detectedActions = detectedActions;
  }

  public ExtractFaceFromVideoResult durationTime(Long durationTime) {
    this.durationTime = durationTime;
    return this;
  }

   /**
   * Get durationTime
   * @return durationTime
  **/
  @ApiModelProperty(value = "")
  public Long getDurationTime() {
    return durationTime;
  }

  public void setDurationTime(Long durationTime) {
    this.durationTime = durationTime;
  }

  public ExtractFaceFromVideoResult exception(Boolean exception) {
    this.exception = exception;
    return this;
  }

   /**
   * Get exception
   * @return exception
  **/
  @ApiModelProperty(value = "")
  public Boolean isException() {
    return exception;
  }

  public void setException(Boolean exception) {
    this.exception = exception;
  }

  public ExtractFaceFromVideoResult face(Face face) {
    this.face = face;
    return this;
  }

   /**
   * Get face
   * @return face
  **/
  @ApiModelProperty(value = "")
  public Face getFace() {
    return face;
  }

  public void setFace(Face face) {
    this.face = face;
  }

  public ExtractFaceFromVideoResult livenessLevel(Integer livenessLevel) {
    this.livenessLevel = livenessLevel;
    return this;
  }

   /**
   * Get livenessLevel
   * @return livenessLevel
  **/
  @ApiModelProperty(value = "")
  public Integer getLivenessLevel() {
    return livenessLevel;
  }

  public void setLivenessLevel(Integer livenessLevel) {
    this.livenessLevel = livenessLevel;
  }

  public ExtractFaceFromVideoResult properties(FaceProperties properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public FaceProperties getProperties() {
    return properties;
  }

  public void setProperties(FaceProperties properties) {
    this.properties = properties;
  }

  public ExtractFaceFromVideoResult startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @ApiModelProperty(value = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public ExtractFaceFromVideoResult status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ExtractFaceFromVideoResult txId(String txId) {
    this.txId = txId;
    return this;
  }

   /**
   * Get txId
   * @return txId
  **/
  @ApiModelProperty(value = "")
  public String getTxId() {
    return txId;
  }

  public void setTxId(String txId) {
    this.txId = txId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtractFaceFromVideoResult extractFaceFromVideoResult = (ExtractFaceFromVideoResult) o;
    return Objects.equals(this.detectedActions, extractFaceFromVideoResult.detectedActions) &&
        Objects.equals(this.durationTime, extractFaceFromVideoResult.durationTime) &&
        Objects.equals(this.exception, extractFaceFromVideoResult.exception) &&
        Objects.equals(this.face, extractFaceFromVideoResult.face) &&
        Objects.equals(this.livenessLevel, extractFaceFromVideoResult.livenessLevel) &&
        Objects.equals(this.properties, extractFaceFromVideoResult.properties) &&
        Objects.equals(this.startTime, extractFaceFromVideoResult.startTime) &&
        Objects.equals(this.status, extractFaceFromVideoResult.status) &&
        Objects.equals(this.txId, extractFaceFromVideoResult.txId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detectedActions, durationTime, exception, face, livenessLevel, properties, startTime, status, txId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtractFaceFromVideoResult {\n");
    
    sb.append("    detectedActions: ").append(toIndentedString(detectedActions)).append("\n");
    sb.append("    durationTime: ").append(toIndentedString(durationTime)).append("\n");
    sb.append("    exception: ").append(toIndentedString(exception)).append("\n");
    sb.append("    face: ").append(toIndentedString(face)).append("\n");
    sb.append("    livenessLevel: ").append(toIndentedString(livenessLevel)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    txId: ").append(toIndentedString(txId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

