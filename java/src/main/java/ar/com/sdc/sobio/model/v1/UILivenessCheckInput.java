/*
 * SOBIO
 * SOBIO Biometric Services
 *
 * OpenAPI spec version: 1
 * Contact: info@softwaredelcentro.com.ar
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ar.com.sdc.sobio.model.v1;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * UILivenessCheckInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-06-14T14:59:22.046-03:00")
public class UILivenessCheckInput {
  @JsonProperty("auditToken")
  private String auditToken = null;

  /**
   * Gets or Sets checkLivenessMode
   */
  public enum CheckLivenessModeEnum {
    LOW("LOW"),
    
    MEDIUM("MEDIUM"),
    
    HIGH("HIGH");

    private String value;

    CheckLivenessModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CheckLivenessModeEnum fromValue(String text) {
      for (CheckLivenessModeEnum b : CheckLivenessModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("checkLivenessMode")
  private CheckLivenessModeEnum checkLivenessMode = null;

  @JsonProperty("uiTemplate")
  private String uiTemplate = null;

  public UILivenessCheckInput auditToken(String auditToken) {
    this.auditToken = auditToken;
    return this;
  }

   /**
   * Get auditToken
   * @return auditToken
  **/
  @ApiModelProperty(value = "")
  public String getAuditToken() {
    return auditToken;
  }

  public void setAuditToken(String auditToken) {
    this.auditToken = auditToken;
  }

  public UILivenessCheckInput checkLivenessMode(CheckLivenessModeEnum checkLivenessMode) {
    this.checkLivenessMode = checkLivenessMode;
    return this;
  }

   /**
   * Get checkLivenessMode
   * @return checkLivenessMode
  **/
  @ApiModelProperty(required = true, value = "")
  public CheckLivenessModeEnum getCheckLivenessMode() {
    return checkLivenessMode;
  }

  public void setCheckLivenessMode(CheckLivenessModeEnum checkLivenessMode) {
    this.checkLivenessMode = checkLivenessMode;
  }

  public UILivenessCheckInput uiTemplate(String uiTemplate) {
    this.uiTemplate = uiTemplate;
    return this;
  }

   /**
   * Get uiTemplate
   * @return uiTemplate
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUiTemplate() {
    return uiTemplate;
  }

  public void setUiTemplate(String uiTemplate) {
    this.uiTemplate = uiTemplate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UILivenessCheckInput uiLivenessCheckInput = (UILivenessCheckInput) o;
    return Objects.equals(this.auditToken, uiLivenessCheckInput.auditToken) &&
        Objects.equals(this.checkLivenessMode, uiLivenessCheckInput.checkLivenessMode) &&
        Objects.equals(this.uiTemplate, uiLivenessCheckInput.uiTemplate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auditToken, checkLivenessMode, uiTemplate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UILivenessCheckInput {\n");
    
    sb.append("    auditToken: ").append(toIndentedString(auditToken)).append("\n");
    sb.append("    checkLivenessMode: ").append(toIndentedString(checkLivenessMode)).append("\n");
    sb.append("    uiTemplate: ").append(toIndentedString(uiTemplate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

